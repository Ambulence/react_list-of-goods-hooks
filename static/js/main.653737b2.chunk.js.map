{"version":3,"sources":["App.tsx","components/GoodsList.tsx","index.tsx"],"names":["SortType","GoodsList","goods","map","good","App","useState","isReversed","setReverse","NONE","sortType","setSortType","visibleGoods","sort","firstGoods","secondGoods","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","goodsFromServer","className","type","classNames","onClick","ReactDOM","render","document","getElementById"],"mappings":"6KAQKA,E,0ECFQC,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3C,OACE,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBACE,UAAQ,OADV,SAIGA,GAFIA,S,iBDJVJ,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAiCE,IAAMK,EAAgB,WAC3B,MAAiCC,oBAAS,GAA1C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASN,EAASS,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EA9BD,SACLV,EACAK,EACAG,GAEA,IAAME,EAAY,YAAOV,GAmBzB,OAjBAU,EAAaC,MAAK,SAACC,EAAYC,GAC7B,OAAQL,GACN,KAAKV,EAASgB,SACZ,OAAOF,EAAWG,cAAcF,GAElC,KAAKf,EAASkB,OACZ,OAAOJ,EAAWK,OAASJ,EAAYI,OAEzC,QACE,OAAO,MAITZ,GACFK,EAAaQ,UAGRR,EAMcS,CAAkBC,EAAiBf,EAAYG,GAmBpE,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYf,IAAaV,EAASgB,WAEtCU,QA1Be,WACrBf,EAAYX,EAASgB,WAmBjB,iCAWA,wBACEQ,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYf,IAAaV,EAASkB,SAEtCQ,QAjCa,WACnBf,EAAYX,EAASkB,SA0BjB,4BAWA,wBACEM,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAalB,IAEjBmB,QAxCQ,WACdlB,GAAYD,IAiCR,sBAYGA,GAAcG,IAAaV,EAASS,OACnC,wBACEe,KAAK,SACLD,UAAU,4BACVG,QA9CE,WACZf,EAAYX,EAASS,MACrBD,GAAW,IAyCH,sBAWN,cAAC,EAAD,CAAWN,MAAOU,QE7GxBe,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.653737b2.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport { GoodsList } from './components/GoodsList';\n\nimport goodsFromServer from './data/goods.json';\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nexport function getReorderedGoods(\n  goods: string[],\n  isReversed: boolean,\n  sortType: SortType,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((firstGoods, secondGoods) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return firstGoods.localeCompare(secondGoods);\n\n      case SortType.LENGTH:\n        return firstGoods.length - secondGoods.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setReverse] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const visibleGoods = getReorderedGoods(goodsFromServer, isReversed, sortType);\n\n  const sortByAlphabet = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const reverse = () => {\n    setReverse(!isReversed);\n  };\n\n  const reset = () => {\n    setSortType(SortType.NONE);\n    setReverse(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n          onClick={sortByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {\n          (isReversed || sortType !== SortType.NONE) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={reset}\n            >\n              Reset\n            </button>\n          )\n        }\n      </div>\n\n      <GoodsList goods={visibleGoods} />\n\n    </div>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  goods: string[];\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => {\n  return (\n    <ul>\n      {goods.map(good => (\n        <li\n          data-cy=\"Good\"\n          key={good}\n        >\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}