{"version":3,"sources":["App.tsx","components/GoodsList.tsx","index.tsx"],"names":["SortType","GoodsList","goods","map","good","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","visibleGoods","sort","firstGoods","secondGoods","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","goodsFromServer","shouldShowReset","className","type","classNames","onClick","currentReverse","ReactDOM","render","document","getElementById"],"mappings":"6KAQKA,E,0ECFQC,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBACE,UAAQ,OADV,SAIGA,GAFIA,S,iBDHRJ,K,YAAAA,E,oBAAAA,E,iBAAAA,M,KAqCE,IAAMK,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASN,EAASS,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EA7BD,SACLV,EADK,GAGJ,IADCK,EACF,EADEA,WAAYG,EACd,EADcA,SAERE,EAAY,YAAOV,GAmBzB,OAjBAU,EAAaC,MAAK,SAACC,EAAYC,GAC7B,OAAQL,GACN,KAAKV,EAASgB,SACZ,OAAOF,EAAWG,cAAcF,GAElC,KAAKf,EAASkB,OACZ,OAAQJ,EAAWK,OAASJ,EAAYI,OAE1C,QACE,OAAO,MAITZ,GACFK,EAAaQ,UAGRR,EAMcS,CACnBC,EAAiB,CAAEf,aAAYG,aAoB3Ba,EAAkBhB,GAAcG,IAAaV,EAASS,KAE5D,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYhB,IAAaV,EAASgB,WAEtCW,QA5Be,WACrBhB,EAAYX,EAASgB,WAqBjB,iCAWA,wBACES,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYhB,IAAaV,EAASkB,SAEtCS,QAnCa,WACnBhB,EAAYX,EAASkB,SA4BjB,4BAWA,wBACEO,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAanB,IAEjBoB,QA1CQ,WACdnB,GAAc,SAAAoB,GAAc,OAAKA,MAmC7B,qBAYEL,GACE,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAhDE,WACZhB,EAAYX,EAASS,MACrBD,GAAc,IA2CN,sBAWN,cAAC,EAAD,CAAWN,MAAOU,QErHxBiB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.aaa96b5c.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport { GoodsList } from './components/GoodsList';\n\nimport goodsFromServer from './data/goods.json';\n\nenum SortType {\n  NONE = 'none',\n  ALPHABET = 'alphabet',\n  LENGTH = 'length',\n}\n\nexport interface GoodsSortingOptions {\n  isReversed: boolean;\n  sortType: SortType;\n}\n\nexport function getReorderedGoods(\n  goods: string[],\n  { isReversed, sortType }: GoodsSortingOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((firstGoods, secondGoods) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return firstGoods.localeCompare(secondGoods);\n\n      case SortType.LENGTH:\n        return (firstGoods.length - secondGoods.length);\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const visibleGoods = getReorderedGoods(\n    goodsFromServer, { isReversed, sortType },\n  );\n\n  const sortByAlphabet = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const reverse = () => {\n    setIsReversed(currentReverse => !currentReverse);\n  };\n\n  const reset = () => {\n    setSortType(SortType.NONE);\n    setIsReversed(false);\n  };\n\n  const shouldShowReset = isReversed || sortType !== SortType.NONE;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n          onClick={sortByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {\n          shouldShowReset && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={reset}\n            >\n              Reset\n            </button>\n          )\n        }\n      </div>\n\n      <GoodsList goods={visibleGoods} />\n    </div>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  goods: string[];\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        data-cy=\"Good\"\n        key={good}\n      >\n        {good}\n      </li>\n    ))}\n  </ul>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}